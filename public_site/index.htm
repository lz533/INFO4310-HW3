<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <script src="https://d3js.org/d3.v7.min.js"></script>
  <script src="https://d3js.org/topojson.v3.min.js"></script>
  <link
    href="https://fonts.googleapis.com/css?family=Aldrich|Arima+Madurai|Open Sans|Libre+Baskerville|Pirata+One|Poiret+One|Sancreek|Satisfy|Share+Tech+Mono|Smokum|Snowburst+One|Special+Elite"
    rel="stylesheet">

  <style>
    .state {
      fill: lightgrey;
      cursor: pointer;
    }

    .outline {
      fill: none;
      stroke: black;
      stroke-width: 1px
    }

    .gridlines line {
      stroke: #bbb;
    }

    .gridlines .domain {
      stroke: none;
    }

    body {
      font: "Arima+Madurai";
    }

    label {
      font-size: 12pt;
    }

    p {
      font-size: 13pt;
    }

    .panel-title {
      font-size: 16pt;
      text-anchor: middle;
      font-weight: bold;
    }

    .panel-table {
      font-size: 14pt;
      text-anchor: middle;
    }
  </style>
</head>

<body>
  <h2 style="text-align: center;">INFO 4310 Homework 3</h2>
  <h4 style="text-align: center;">Eric Freitag, Longyi Zhang, Lyon Li, Miles Rosenthal </h4>
  <div style="text-align: center;">
    <p style="margin-bottom: 50; text-align: left;">
    </p>

    <svg id="main" height=750 width=1200 style="margin-bottom: 50;"></svg>
  </div>

</body>

<script>
  let render = async function () {

    // TODO: Set up main visualization
    const main = d3.select("#main")
    const mainMargin = { t: 10, r: 10, b: 10, l: 10 }
    const mainWidth = main.attr("width") - mainMargin.l - mainMargin.r
    const mainHeight = main.attr("height") - mainMargin.t - mainMargin.b
    const viewport = main.append("g")
      .attr("transform", `translate(${mainMargin.l},${mainMargin.t})`)

    // TODO: Load and process datasets
    let df = await d3.csv('./processed_state_1913_2013.csv')
    df = df.filter(function (d) { return d.State }) // Remove empty rows generated by pre-processing script.

  }
  render();
</script>

</html>